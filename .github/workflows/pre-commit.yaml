# cspell:words snok, virtualenvs, pydeps, venv, Pylint, pylint
---
env:
  POETRY_VERSION: '1.8.1'
  PYTHON_VERSION: '3.9'
jobs:
  pre-commit:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'
    - uses: 'actions/setup-python@v3'
      with:
        python-version: '${{ env.PYTHON_VERSION }}'
    - name: 'Cache Poetry Install'
      uses: 'actions/cache@v3'
      with:
        key: 'poetry-${{ env.POETRY_VERSION }}'
        path: '${{ runner.home }}/.local/src/python/hooks'
    - name: 'Install Poetry'
      uses: 'snok/install-poetry@v1.3.4'
      with:
        installer-parallel: true
        version: '${{ env.POETRY_VERSION }}'
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: './src/python/hooks/.venv'
    - id: 'cache-deps'
      name: 'Cache Dependencies'
      uses: 'actions/cache@v3'
      with:
        key: |
          pydeps-${{ hashFiles('./src/python/hooks/poetry.lock') }}
        path: './src/python/hooks/.venv'
    - name: 'Debug environment'
      run: |
        echo "Current working directory: $(pwd)"
        echo "Environment PATH: $PATH"
        which poetry || echo "Poetry not found"
        poetry --version || echo "Poetry not installed"
    - if: |
        steps.cache-deps.outputs.cache-hit != 'true'
      name: 'Install Dependencies'
      # `--no-root` to install all dependencies but not the project itself.
      run: |
        poetry install --no-interaction --no-root -C ./src/python/hooks
    - name: 'Install Poetry Project'
      run: |
        poetry install --no-interaction -C ./src/python/hooks
    - id: 'activate-virtual'
      name: 'Activate virtual environment and run checks'
      run: |
        cd src/python/hooks &&
        . .venv/bin/activate &&
        black --version
      shell: 'bash'  # Ensures bash is used for the script
    - id: 'run-black'
      name: 'Run Black'
      run: |
        cd src/python/hooks &&
        .venv/bin/black --version
    - uses: 'pre-commit/action@v3.0.0'
      with:
        extra_args: '--all-files --config cfg/pre-commit-config.yaml --verbose'
name: 'pre-commit'
'on':
  pull_request: null
  workflow_dispatch: null
...
